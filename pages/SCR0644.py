from pages.Page import Page
from pages.elements import Row, RText
import utilities.xpath as xpath

class SCR0644(Page):
    """
    SCR_0644 COI Approval
    """
    locators = {
#         "documents": "event=RepositoryLinkEvent"
        "status": xpath.text_sibling("td", "Status:", 2),
        "FCOI participant": xpath.text_sibling("td", "FCOI participant:", 2),
        "disclosure on file": xpath.text_sibling("td", "Disclosure on File", 2),
        "date received": xpath.text_sibling("td", "Date Received ", 2),
        "generated by": xpath.text_sibling("td", "Generated By:", 2),
        "generation date": xpath.text_sibling("td", "Generation Date:", 2),
        "reason generated": xpath.text_sibling("td", "Reason Generated", 2),
        "approval row": "xpath=//td[contains(text(), 'Approval Status History')]/./following::tr[6]",
        "comments": xpath.text_sibling("td", "Comments", 2),
        "documents": xpath.text_sibling("td", "Documents ", 2)
    }
    
    status = RText("status", "Current approval status")
    FCOI_participant = RText("FCOI participant", "FCOI participant")
    disclosureon_file = RText("disclosure on file", "Disclosure on file")
    date_received = RText("date received", "Approval date received")
    generated_by = RText("generated by", "Approval generated by")
    generation_date = RText("generation date", "Approval generation date")
    reason_generated = RText("reason generated", "Approval reason generated")
    comments = RText("comments", "Comments")
    documents = RText("documents", "Documents")
        
#     @classmethod
#     def url(cls, HUID, request_Id, segment_Id, segment_Revision_Id, approval_requirement_id):
#         """
#         Direct navigation to SCR_0644
#         """
#         url = "{{}}/gmas/dispatch?segmentScopeRequestId=&ApprovalListViewOrEditDetailEvent=&requestTypeId=&responsiblePartyDisplayString=Avillach%2C+Paul&HUID={}&approvalTypeId=2021&ref=%2Fapproval%2FSCR0080Approvals.jsp&fromSegmentHomePage=true&requestId={}&formName=ApprovalListForm&segmentId={}&segmentRevisionId={}&approvalId={}&approvalUserId=&generatedBy=&submit"
#         return url.format(HUID, request_Id, segment_Id, segment_Revision_Id, approval_requirement_id)

   
    @classmethod
    def url(cls, request_id, segment_Id, huid, approval_requirement_id):
        """
        Direct navigation to SCR_0644
        """
        url = "{{}}/gmas/dispatch?ApprovalListViewOrEditDetailEvent=&requestTypeId=&requestId={}&segmentId={}&formName=ApprovalListForm&approvalTypeId=2021&HUID={}&approvalId={}&generatedBy=&ref=%2Fapproval%2FSCR0080Approvals.jsp&segmentScopeRequestId=&fromSegmentHomePage=true&responsiblePartyDisplayString=Bjerregaard%2C+Peter&approvalUserId=&segmentRevisionId=&submit"
        return url.format(request_id, segment_Id, huid, approval_requirement_id)
    
    def goto_documents(self):
        """
        Clicks the "Documents" link
        Goes to SCR_0433
        """
        return self.go("documents")

        
    @property
    def approval_rows(self):
        """
        List of all rows from the "approval status history" table
        """
        return [self.Approval_row(row, self) for row in self.finds("approval row")]

    class Approval_row(Row):
        locators = {
            "date": Row.cell(3),
            "status": Row.cell(6),
            "updated by": Row.cell(9)
        }

        date = RText("date", "Approval date")
        status = RText("status", "Approval status")
        updated_by = RText("updated by", "Approval updated by")
        
    
