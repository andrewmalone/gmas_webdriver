from pages.Page import Page
from pages.elements import Row
from pages.elements import RText, Radio, Select, Text, Checkbox
import utilities.xpath as xpath


class SCR0081(Page):
    """
    SCR_0081 Edit Approval
    """
    locators = {
        "documents": "event=RepositoryLinkEvent",
        "cancel": "ApprovalEditCancelEvent",
        "approval type": xpath.text_sibling("td", "Approval type", 2),
        "generated by": xpath.text_sibling("td", "Generated by", 2),
        "generation date": "xpath=//span[contains(normalize-space(text()), 'Generation date')]/../following-sibling::td[2]",
        "due date": "name=approvalEventOrDateRadio",
        "due date event": "name=dueDateEventId",
        "due date date": "name=dueDate",
        "status": "name=approvalStatusId",
        "coi status": "name=conflictStatusId",
        "responsible party": xpath.text_sibling("td", "Responsible party", 2),
        "approval/assurance number": "name=approvalNumber",
        "multiples required": "name=multipleApprovals",
        "received": "xpath=//span[contains(normalize-space(text()), 'Received')]/../following-sibling::td[2]",
        "effective": "xpath=//span[contains(normalize-space(text()), 'Effective')]/../following-sibling::td[2]",
        "expires": "xpath=//span[contains(normalize-space(text()), 'Expires')]/../following-sibling::td[2]",
        "comments": xpath.text_sibling("td", "Comments", 2)
    }
    
    documents = RText("documents", "Documents")
    approval_type = RText("approval type", "Approval Type")
    generated_by = RText("generated by", "Generated by")
    generation_date = RText("generation date", "Generation date")
    due_date = Radio("due date", "Due date") 
    duedate_event = Select("due date event", "Due date - event")
    duedate_date = Text("due date date", "Due date - date")
    status = Select("status", "Status")
    coi_status = Select("coi status", "Conflict of interest status") 
    responsible_party = RText("responsible party", "Responsible party")
    approval_number = Text("approval/assurance number", "Approval/assurance number")
    multiples_required = Checkbox("multiples required", "Multiples required")
    received  = RText("received", "Received date")
    effective = RText("effective", "Effective date")
    expires = RText("expires", "Expiration date")
    comments = RText("comments", "Comments")
    
    @classmethod
    def url(cls, requestId, segmentId, approvalTypeId, HUID, approval_requirement_id):
        """
        Direct navigation to SCR_0560
        """
        url = "{{}}/gmas/dispatch?ApprovalListViewOrEditDetailEvent=&requestTypeId=&requestId={}&segmentId={}&formName=ApprovalListForm&approvalTypeId={}&HUID={}&approvalId={}&generatedBy=&ref=%2Fapproval%2FSCR0080Approvals.jsp&segmentScopeRequestId=&fromSegmentHomePage=true&responsiblePartyDisplayString=Shen%2C+Chia&approvalUserId=&segmentRevisionId"
        return url.format(requestId, segmentId, approvalTypeId, HUID, approval_requirement_id)
   
        """
        Clicks the "Documents" link
        Goes to SCR_0433
        """
        return self.go("documents")

    def cancel(self):
        """
        Clicks the <Cancel> button
        Goes to SCR_0080
        """
        return self.go("cancel")
