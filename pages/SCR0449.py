from pages.Page import Page
from pages.elements import Row
from pages.elements import RText, Radio, Select, Text, Checkbox
import utilities.xpath as xpath


class SCR0449(Page):
    """
    SCR_0449 View approval
    """
    locators = {
                "generated by": xpath.text_sibling("td", "Generated by", 2),
                "generated date": xpath.text_sibling("td", "Generated date", 2),
                "due event": xpath.text_sibling("td", "Due date", 2),
                "status": xpath.text_sibling("td", "Approval type", 2),
                "responsible party": xpath.text_sibling("td", "Responsible party", 2),
                "approval number": xpath.text_sibling("td", "Approval/Assurance number", 2),
                "date effective": xpath.text_sibling("td", "Effective", 2),
                "date expires": xpath.text_sibling("td", "Expires", 2),
                "documents" : xpath.text_sibling("td", "Documents", 2)
                }
    
    _locators = {
                 
                "generated by": "xpath=//span[contains(normalize-space(text()), 'Generated by')]/../following-sibling::td[1]",
                "generated date": "xpath=//span[contains(normalize-space(text()), 'Generated date')]/../following-sibling::td[1]",
                "due date": "xpath=//span[contains(normalize-space(text()), 'Due event')]/../following-sibling::td[1]",
                "status": "xpath=//span[contains(normalize-space(text()), 'Status')]/../following-sibling::td[1]",
                "responsible party": "xpath=//span[contains(normalize-space(text()), 'Responsible party')]/../following-sibling::td[1]",
                "approval number": "xpath=//span[contains(normalize-space(text()), 'Approval/Assurance number')]/../following-sibling::td[1]",
                "date effective": "xpath=//span[contains(normalize-space(text()), 'Date effective')]/../following-sibling::td[1]",
                "date expires":  "xpath=//span[contains(normalize-space(text()), 'Date expires')]/../following-sibling::td[1]"
    }
    
     
    @classmethod
    def url(cls, segmentId, approval_requirement_id):
        """
        Direct navigation to SCR_0449
        """
        url = "{{}}/gmas/dispatch?segmentScopeRequestId=&ApprovalListViewOrEditDetailEvent=&responsiblePartyDisplayString=PI+%2F+Department&HUID=&approvalTypeId=2003&ref=%2Fapproval%2FSCR0080Approvals.xhtml&requestId=&formName=ApprovalListForm&segmentId={}&approvalId={}&segmentRevisionId=&fromSegmentHomePage=true"
        return url.format(segmentId, approval_requirement_id)

        generated_by = RText("generated by", "Approval generated by")
        generated_date = RText("generated date", "Approval generated")
        due_date = RText("due date", "Approval due date")
        status = RText("status","Approval status")
        responsible_party = RText("responsible party", "Responsible party")
        approval_number = RText("approval number", "Approval/Assurance number")
        date_effective = RText("date effective", "Effective date")
        date_expires  = RText("date expires", "Expires date")
        documnets = RText("documents", "Documents")
        
        

    
    